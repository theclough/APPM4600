(3)

What does the bisection method do?
-It searches for zeros of a function by splitting the
interval in 1/2 until it finds one where the midpoint
is less than a given tolerance

What is requred for the method to work?
-The initial endpoints must have different signs

What problem is the fixed point iteration trying to solve?
-The fixed point iteration algorithm is searching for the
intersection of a given function with the line y=x

(4)

4.1)

(a) the interval (0.5,2) finds the correct root of 1
(b) the interval (-1,0.5) finds an incorrect root of -1
(c) the interval (-1,2) finds the same root as (a)

(a) succeeds because the function is nice to the bisection
method in the interval, i.e. the initial endpoints have different
signs and the function in the interval is relatively linear
(b) fails because the f(-1) and f(0.5) are both < 0 and so it spits
out an error message, but this doesn't mean that the bisection method can't
find a root = 0.
(c) re-discovers the same endpoint as (a) becuase it just so happens that the
midpoint of the interval (-1,2) is 1 which is a root

4.2)

The code was successful for (a) & (c.1) but unsuccessful for (b) and (c).
(b) and (c.2) were unsuccessful because the starting endpoints have the same sign.
(a) was successful because the endpoints had the same sign and (c1) was successful
because one of the endpoints was already a root.

4.3)

The fixed point iteration converges only for (c). It converges for (c) because |f_c'| is
not to large (like |f_a'| & |f_b'|) and not too small (like |f_d'|). As such, f_a and f_b
do not converge because the algorithm blasts off to OFL due to the large slope around the
fixed point and f_d never reaches the correct value because it's derivative is too small
for the searching method in the algorithm to make significant progress.